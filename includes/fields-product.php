<?php

/**
 * This file declares a function to add fields to the
 * Products custom post type. Other functions in this
 * file may declare functions to further work with
 * those fields.
 * 
 * @author Waqar Haider <waqarhaider783@yahoo.com>
 */

/**
 * Custom Post Type fields generated by ACF
 */
if(function_exists('acf_add_local_field_group')):
  acf_add_local_field_group(
    array(
      'key' => 'group_607413ae52711',
      'title' => 'Brand Attribution',
      'fields' => array(
        array(
          'key' => 'field_607413b627fd1',
          'label' => 'Brand',
          'name' => 'brand',
          'type' => 'select',
          'instructions' => 'The brand this product belongs to',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'choices' => array(
          ),
          'default_value' => true,
          'allow_null' => true,
          'multiple' => 0,
          'ui' => 0,
          'return_format' => 'value',
          'ajax' => 0,
          'placeholder' => '',
        ),
      ),
      'location' => array(
        array(
          array(
            'param' => 'post_type',
            'operator' => '==',
            'value' => 'product',
          ),
        ),
      ),
      'menu_order' => 0,
      'position' => 'normal',
      'style' => 'default',
      'label_placement' => 'top',
      'instruction_placement' => 'label',
      'hide_on_screen' => '',
      'active' => true,
      'description' => '',
    )
  );

endif;

/**
 * Dynamically populated the Brands field in WooCommerce
 * Products with all published Brands posts
 */
function populate_brands_in_woocommerce($field) {
  global $post;
  
  $field['choices'] = array();

  $brands = new WP_Query([
    'post_type'       => 'brand',
    'post_status'     => 'publish',
    'post_parent'     => 0,
    'posts_per_page'  => -1
  ]);

  if($brands->found_posts):

    foreach($brands->posts as $brand):

      $field['choices'][$brand->ID] = $brand->post_title;
      if(strpos($post->post_title, $brand->post_title) > -1) $field['default_value'] = $brand->ID;
      
    endforeach;
    
  endif;

  return $field;
}